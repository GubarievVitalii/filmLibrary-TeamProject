{"mappings":"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","sources":["src/index.js","src/js/gallery.js","src/js/filter.js","src/js/onSearch.js"],"sourcesContent":["import getRefs from './js/get-refs';\nimport openMovieDetails from './js/movie-details-open';\nimport footerModal from './js/footer-modal-open';\nimport { moviesApi, customPagination } from './js/gallery';\nimport './js/nightMode';\nimport topUp from './js/top.js';\nimport './js/filter';\nimport './js/onSearch';\n\nimport userAuth from './js/auth';\n\nconst refs = getRefs();\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  moviesApi.currentFetch = moviesApi.fetchTrendWeekMovies;\n  customPagination.moveToPage(moviesApi.currentPage);\n});\n\n// ------------ OPEN MOVIE MODAL --------------------\n\nrefs.imagesContainer.addEventListener('click', onMovieCardClick);\nasync function onMovieCardClick(e) {\n  if (e.target.classList.contains('gallery__img')) {\n    e.preventDefault();\n    const movieId = e.target.dataset.movieId;\n    await openMovieDetails(moviesApi.fetchMovieByID(movieId));\n    \n  }\n}\n// ---------- OPEN MOVIE MODAL END -------------------\n\nfooterModal();\n\ntopUp();\n","import getRefs from \"./get-refs\";\nimport { spinnerOn } from './loader';\nimport MoviesApi from \"./moviesApi\";\n\nimport Notiflix from 'notiflix';\nimport 'notiflix/dist/notiflix-3.2.5.min.css';\n\nimport { Pagination as CustomPagination } from './custom/pagination/pagination'\n\nimport { createMarkupElementGallery } from \"./renderMarkup\";\n\nconst refs = getRefs();\n\nfunction renderMovies({ results, total_results, total_pages, page }){\n\n  refs.imagesContainer.innerHTML = \"\";  \n\n  if (results.length === 0) {\n    Notiflix.Notify.warning(\n      '❌ Sorry, there are no movies matching your search query. Please try again.',\n      {\n        timeout: 3000,\n      }\n    );\n    refs.paginationList.classList.add(\"is-hidden\");\n    return\n  }\n\n  if (results.length > 0 && page === 1) {\n    Notiflix.Notify.success (\n      ` We found ${total_results} movies.`, {\n        timeout: 3000,}\n    )\n  }\n  \n  results.length && refs.imagesContainer.insertAdjacentHTML(\n      'afterbegin',\n      results.map(createMarkupElementGallery).join(''));\n  \n  refs.paginationList.classList.remove(\"is-hidden\");\n  customPagination.setTotalPages(total_pages);\n  \n  // Skeleton\n  spinnerOn();\n}\n\nconst moviesApi = new MoviesApi(renderMovies);\n\nconst customPagination = new CustomPagination(refs.paginationList,{\n    countPoint : 5,\n    onShow: (currentPage) => {\n      moviesApi.currentPage = currentPage;\n      window.scrollTo({ top: 240, behavior: 'smooth' });\n      moviesApi.currentFetch();\n    }\n    }\n  );\n\nexport {moviesApi, customPagination}","import { moviesApi, customPagination } from './gallery';\n\nimport getRefs from './get-refs';\n\nconst refs = getRefs();\n\n// set genres\nlet selectedGenre = [];\nlet selectedGenreName = [];\nsetGenre();\n\nasync function setGenre() {\n  try {\n    const genre = await moviesApi.getAllGenres();\n\n    genre.forEach(genre => {\n      const elem = document.createElement('li');\n      elem.classList.add('filter__genre-item');\n      elem.id = genre.id;\n      elem.innerText = genre.name;\n      elem.addEventListener('click', () => {\n        if (selectedGenre.length === 0) {\n          selectedGenre.push(genre.id);\n          selectedGenreName.push(genre.name);\n        } else {\n          if (selectedGenre.includes(genre.id)) {\n            selectedGenre.forEach((id, index) => {\n              if (id === genre.id) {\n                selectedGenre.splice(index, 1);\n                selectedGenreName.splice(index, 1);\n              }\n            });\n          } else {\n            selectedGenre.push(genre.id);\n            selectedGenreName.push(genre.name);\n          }\n        }\n\n        refs.searchInput.value = '';\n        moviesApi.genres = selectedGenre;\n        moviesApi.currentFetch = moviesApi.fetchMovieByGenres;\n        customPagination.moveToPage(1);\n\n        highlightSelection();\n        updateFilterSelectBtn();\n      });\n      refs.filterGenreList.append(elem);\n    });\n  } catch (error) {}\n}\n\n// highlight selected genre\nfunction highlightSelection() {\n  const genres = document.querySelectorAll('.filter__genre-item');\n  genres.forEach(genre => {\n    genre.classList.remove('filter__genre-item--highlight');\n  });\n  if (selectedGenre.length !== 0) {\n    refs.filterClear.classList.remove('filter--hidden');\n    selectedGenre.forEach(id => {\n      const filterHighlightedGenre = document.getElementById(id);\n      filterHighlightedGenre.classList.add('filter__genre-item--highlight');\n    });\n  } else {\n    refs.filterClear.classList.add('filter--hidden');\n    fetchTrendMovies();\n  }\n}\n\n// clear filter\nrefs.filterClear.addEventListener('click', onFilterClearBtn);\n\nfunction onFilterClearBtn() {\n  clearFilter();\n  fetchTrendMovies();\n}\n\nexport function clearFilter() {\n  if (selectedGenre.length !== 0) {\n    selectedGenre.forEach(id => {\n      const filterHighlightedGenre = document.getElementById(id);\n      filterHighlightedGenre.classList.remove('filter__genre-item--highlight');\n    });\n  }\n  selectedGenre = [];\n  selectedGenreName = [];\n  refs.filterClear.classList.add('filter--hidden');\n  refs.filterSelectBtn.innerHTML = 'Select genre';\n}\n\n// custom select\nrefs.filterSelectBtn.addEventListener('click', onFilterSelectBtn);\n\nfunction onFilterSelectBtn() {\n  refs.filterWrap.classList.toggle('filter--active');\n}\n\nfunction updateFilterSelectBtn() {\n  if (selectedGenreName.length === 0) {\n    refs.filterSelectBtn.innerHTML = 'Select genre';\n    return;\n  }\n  if (selectedGenreName.length === 1) {\n    refs.filterSelectBtn.innerHTML = selectedGenreName[0];\n    return;\n  }\n  if (selectedGenreName.length > 1) {\n    refs.filterSelectBtn.innerHTML = selectedGenreName[0] + '...';\n    return;\n  }\n}\n\n// fetch trend movies\n\nfunction fetchTrendMovies() {\n  moviesApi.currentPage = 1;\n  moviesApi.currentFetch = moviesApi.fetchTrendWeekMovies;\n  customPagination.moveToPage(moviesApi.currentPage);\n}\n\n// hide genre list by clicking outside\ndocument.onclick = function closeList(e) {\n  if (!refs.filterWrap.contains(e.target)) {\n    refs.filterWrap.classList.remove('filter--active');\n  }\n};\n","import getRefs from './get-refs';\nimport { moviesApi, customPagination } from './gallery';\nimport { clearFilter } from './filter';\n\nconst refs = getRefs();\n\nfunction onSearch(e) {\n  e.preventDefault();\n  clearFilter();\n\n  if (refs.searchInput.value) {\n    moviesApi.query = refs.searchInput.value;\n    moviesApi.currentFetch = moviesApi.fetchMovieQuery;\n    customPagination.moveToPage(1); \n  }\n}\n\nrefs.searchForm.addEventListener('submit', onSearch);"],"names":["$lpPzL","parcelRequire","$7c59f4ec4043ce00$var$refs","default","$7c59f4ec4043ce00$export$736842a9f5582179","$2Di0R","results","total_results","total_pages","page","imagesContainer","innerHTML","length","$parcel$interopDefault","$eWCmQ","Notify","warning","timeout","paginationList","classList","add","success","insertAdjacentHTML","map","$cky31","createMarkupElementGallery","join","remove","$7c59f4ec4043ce00$export$716d0c43b3ac9b02","setTotalPages","$gjiCh","spinnerOn","$4bgrY","Pagination","countPoint","onShow","currentPage","window","scrollTo","top","behavior","currentFetch","$cc8167df025acb14$var$refs","$cc8167df025acb14$var$selectedGenre","$cc8167df025acb14$var$selectedGenreName","$cc8167df025acb14$export$77cedf2a856f1597","forEach","id","document","getElementById","filterClear","filterSelectBtn","$cc8167df025acb14$var$fetchTrendMovies","fetchTrendWeekMovies","moveToPage","async","getAllGenres","genre","elem","createElement","innerText","name","addEventListener","push","includes","index","splice","searchInput","value","genres","fetchMovieByGenres","querySelectorAll","$cc8167df025acb14$var$updateFilterSelectBtn","filterGenreList","append","error","$cc8167df025acb14$var$setGenre","filterWrap","toggle","onclick","e","contains","target","$94b99a53ef2767b6$var$refs","searchForm","preventDefault","query","fetchMovieQuery","$1f0dc3b9307be026$var$refs","movieId","dataset","$E9a0y","fetchMovieByID","$93cIg","$6mLAN"],"version":3,"file":"index.2c514dcb.js.map"}