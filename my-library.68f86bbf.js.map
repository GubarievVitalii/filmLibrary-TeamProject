{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,S,4BCAAC,EAAAD,EAAA,S,sDAMA,MAAME,YAAEC,EAAWC,WAAEC,EAAUC,UAAEC,EAASC,eAAEC,IAAmB,EAAAC,EAAAC,WAEhD,SAAAC,EAAuBC,EAAMC,EAAe,IACzD,IACET,EAAWU,UAAUC,IAAI,YACzBT,EAAUQ,UAAUE,OAAO,W,CAC3B,MAAOC,GACP,M,CAGF,IAAIC,EACAC,EAAgB,GACpB,IAGE,IAAIC,EAFJF,EAAcG,aAAaC,QAAQ,WACnCpB,EAAYqB,UAAY,GAGxB,MAAMC,EAAcC,KAAKC,MAAMR,GAE/BM,EAAYG,OAAOf,EAAK,GAAKC,EAAcD,EAAOC,GAAce,KAAIC,IAClET,EAASS,EAAYC,kBACdD,EAAYT,OACnBS,EAAYE,UAAYX,EAExBD,IAAiB,EAAAnB,EAAAgC,4BAA2BH,EAAY,IAE1DrB,EAAeM,UAAUE,OAAO,aAChCiB,EAAAC,iBAAiBC,cAAcC,KAAKC,KAAKb,EAAYc,OAASzB,KAC7DW,EAAYc,QAAU9B,EAAeM,UAAUC,IAAI,Y,CACpD,MAAOwB,GAIP,OAHAC,EAAAC,GAASC,OAAOC,QAAQ,6BACxBnC,EAAeM,UAAUC,IAAI,kBAC7B,EAAA6B,EAAAC,Y,CAIF3C,EAAY4C,mBAAmB,YAAa3B,IAC5C,EAAAyB,EAAAC,Y,CC3CF7C,EAAAD,EAAA,S,oDAMA,MAAME,YAAE8C,EAAW5C,WAAE6C,EAAU3C,UAAE4C,EAAS1C,eAAE2C,IAAmB,EAAAzC,EAAAC,WAEhD,SAAAyC,EAAqBvC,EAAMC,EAAe,IACvD,IACEoC,EAAUnC,UAAUC,IAAI,YACxBiC,EAAWlC,UAAUE,OAAO,W,CAC5B,MAAOC,GACP,M,CAGF,IAAImC,EACAC,EAAc,GAClB,IAGE,IAAIjC,EAFJgC,EAAY/B,aAAaC,QAAQ,SACjCyB,EAAYxB,UAAY,GAGxB,MAAM+B,EAAY7B,KAAKC,MAAM0B,GAE7BE,EAAU3B,OAAOf,EAAK,GAAGC,EAAcD,EAAOC,GAAce,KAAI2B,IAC5DnC,EAASmC,EAAUzB,kBACZyB,EAAUnC,OACjBmC,EAAUxB,UAAYX,EAEtBiC,IAAe,EAAArD,EAAAgC,4BAA2BuB,EAAU,IAExDL,EAAepC,UAAUE,OAAO,aAChCiB,EAAAC,iBAAiBC,cAAcC,KAAKC,KAAKiB,EAAUhB,OAASzB,KAC3DyC,EAAUhB,QAAUY,EAAepC,UAAUC,IAAI,Y,CAClD,MAAOwB,GAIP,OAHAC,EAAAC,GAASC,OAAOC,QAAQ,2BACxBO,EAAepC,UAAUC,IAAI,kBAC7B,EAAA6B,EAAAC,Y,CAIFE,EAAYD,mBAAmB,YAAaO,IAC5C,EAAAT,EAAAC,Y,wDFjCF,EAAA/C,EAAAY,WAEA,MAAMP,WAAEqD,EAAUnD,UAAEoD,EAASxD,YAAEyD,IAAgB,EAAAjD,EAAAC,WAE/CuB,EAAA0B,cAAcC,eAAejD,EAC7BsB,EAAAC,iBAAiB2B,WAAW,GAE5BL,EAAWM,iBAAiB,SAC5B,WACE7B,EAAA0B,cAAcC,eAAejD,EAC7BsB,EAAAC,iBAAiB2B,WAAW,E,IAG9BJ,EAAUK,iBAAiB,SAC3B,WACE7B,EAAA0B,cAAcC,eAAeT,EAC7BlB,EAAAC,iBAAiB2B,WAAW,E,IAG9BH,EAAYI,iBAAiB,SAC7B,SAA0B7C,GACxB,GAAIA,EAAE8C,OAAOjD,UAAUkD,SAAS,gBAAiB,CAC/C/C,EAAEgD,iBACF,MAAMC,EAAUjD,EAAE8C,OAAOI,QAAQD,SACjC,EAAAE,EAAA1D,SAAiBuB,EAAAoC,UAAUC,eAAeJ,G,MAI9C,EAAAK,EAAA7D","sources":["src/my-library.js","src/js/render-watched-list.js","src/js/render_queue-list.js"],"sourcesContent":["import topUp from './js/top.js';\nimport './js/nightMode';\nimport getRefs from './js/get-refs.js';\nimport renderWatched from './js/render-watched-list.js';\nimport renderQueue from './js/render_queue-list.js';\nimport openMovieDetails from './js/movie-details-open.js';\nimport footerModal from './js/footer-modal-open';\nimport { moviesApi, customPagination , renderLibrary } from './js/library'\n\nimport './js/auth';\ntopUp();\n\nconst { watchedBtn, queuedBtn, galleryList } = getRefs();\n\nrenderLibrary.functionRender=renderWatched;\ncustomPagination.moveToPage(1);\n\nwatchedBtn.addEventListener('click', onWatchedClick);\nfunction onWatchedClick() {\n  renderLibrary.functionRender=renderWatched;\n  customPagination.moveToPage(1);\n}\n\nqueuedBtn.addEventListener('click', onQueueClick);\nfunction onQueueClick() {  \n  renderLibrary.functionRender=renderQueue;\n  customPagination.moveToPage(1);\n}\n\ngalleryList.addEventListener('click', onMovieCardClick);\nfunction onMovieCardClick(e) {\n  if (e.target.classList.contains('gallery__img')) {\n    e.preventDefault();\n    const movieId = e.target.dataset.movieId;\n    openMovieDetails(moviesApi.fetchMovieByID(movieId));\n  }\n}\n\nfooterModal();\n","import { createMarkupElementGallery } from './renderMarkup';\nimport { spinnerOn } from './loader';\nimport getRefs from './get-refs';\nimport Notiflix from 'notiflix';\nimport { customPagination } from './library'\n\nconst { galleryList, watchedBtn, queuedBtn, paginationList } = getRefs();\n\nexport default function renderWatched(page, countOnePage = 20) {\n  try {\n    watchedBtn.classList.add('selected');\n    queuedBtn.classList.remove('selected');\n  } catch (e) {\n    return;\n  }\n\n  let watchedList;\n  let watchedMarkup = '';\n  try {\n    watchedList = localStorage.getItem('Watched');\n    galleryList.innerHTML = '';\n    let genres;\n\n    const watchedData = JSON.parse(watchedList);\n    \n    watchedData.slice((page-1) * countOnePage, (page)*countOnePage).map(watchedItem => {\n      genres = watchedItem.genreNames;\n      delete watchedItem.genres;\n      watchedItem.genre_str = genres;\n\n      watchedMarkup += createMarkupElementGallery(watchedItem);\n    });\n    paginationList.classList.remove(\"is-hidden\");\n    customPagination.setTotalPages(Math.ceil(watchedData.length / countOnePage));\n    !watchedData.length && paginationList.classList.add(\"is-hidden\");\n  } catch (e) {\n    Notiflix.Notify.warning('There is no watched list!');\n    paginationList.classList.add(\"is-hidden\");\n    spinnerOn();\n    return;\n  }\n\n  galleryList.insertAdjacentHTML('beforeend', watchedMarkup);\n  spinnerOn();\n}","import { createMarkupElementGallery } from './renderMarkup';\nimport { spinnerOn } from './loader';\nimport getRefs from './get-refs';\nimport Notiflix from 'notiflix';\nimport { customPagination } from './library';\n\nconst { galleryList, watchedBtn, queuedBtn, paginationList } = getRefs();\n\nexport default function renderQueue(page, countOnePage = 20) {\n  try {\n    queuedBtn.classList.add('selected');\n    watchedBtn.classList.remove('selected');\n  } catch (e) {\n    return;\n  }\n\n  let queueList;\n  let queueMarkup = '';\n  try {\n    queueList = localStorage.getItem('Queue');\n    galleryList.innerHTML = '';\n    let genres;\n\n    const queueData = JSON.parse(queueList);\n\n    queueData.slice((page-1)*countOnePage, (page)*countOnePage).map(queueItem => {\n        genres = queueItem.genreNames;\n        delete queueItem.genres;\n        queueItem.genre_str = genres;\n\n        queueMarkup += createMarkupElementGallery(queueItem);\n      });\n    paginationList.classList.remove(\"is-hidden\");\n    customPagination.setTotalPages(Math.ceil(queueData.length / countOnePage));\n    !queueData.length && paginationList.classList.add(\"is-hidden\");\n  } catch (e) {\n    Notiflix.Notify.warning('There is no queue list!');\n    paginationList.classList.add(\"is-hidden\");\n    spinnerOn();\n    return;\n  }\n\n  galleryList.insertAdjacentHTML('beforeend', queueMarkup);\n  spinnerOn();\n}"],"names":["$6mLAN","parcelRequire","$cky31","galleryList","$6b17b7308c5f5bae$var$galleryList","watchedBtn","$6b17b7308c5f5bae$var$watchedBtn","queuedBtn","$6b17b7308c5f5bae$var$queuedBtn","paginationList","$6b17b7308c5f5bae$var$paginationList","$lpPzL","default","$6b17b7308c5f5bae$export$2e2bcd8739ae039","page","countOnePage","classList","add","remove","e","watchedList","watchedMarkup","genres","localStorage","getItem","innerHTML","watchedData","JSON","parse","slice","map","watchedItem","genreNames","genre_str","createMarkupElementGallery","$2sH7u","customPagination","setTotalPages","Math","ceil","length","e1","$parcel$interopDefault","$eWCmQ","Notify","warning","$gjiCh","spinnerOn","insertAdjacentHTML","$b7ee95d87cc70115$var$galleryList","$b7ee95d87cc70115$var$watchedBtn","$b7ee95d87cc70115$var$queuedBtn","$b7ee95d87cc70115$var$paginationList","$b7ee95d87cc70115$export$2e2bcd8739ae039","queueList","queueMarkup","queueData","queueItem","$fc8e7c71b3b7ed96$var$watchedBtn","$fc8e7c71b3b7ed96$var$queuedBtn","$fc8e7c71b3b7ed96$var$galleryList","renderLibrary","functionRender","moveToPage","addEventListener","target","contains","preventDefault","movieId","dataset","$E9a0y","moviesApi","fetchMovieByID","$93cIg"],"version":3,"file":"my-library.68f86bbf.js.map"}